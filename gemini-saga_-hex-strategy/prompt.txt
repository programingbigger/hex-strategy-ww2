以下のフォルダ構成をCommander配下に構築してください

フォルダ構成
📁 Commander/
├── 📁 public/              # Web公開用の静的ファイル (index.html, faviconなど)
│
├── 📁 data/                # ゲームデータ (デザイナーが編集しやすいように分離)
│   ├── 📁 maps/            # マップデータ (stage1.json, tutorial_map.json...)
│   ├── 📁 units/           # ユニット定義データ (unit_definitions.json)
│   ├── 📁 scenarios/       # シナリオデータ (scenario_data.json)
│   └── 📁 locales/          # 多言語対応用のテキストデータ (ja.json, en.json)
│
├── 📁 docs/                # ゲームデザインや仕様などのドキュメント
│   └── game_design.md      # いただいた仕様書などを格納
│
└── 📁 src/                 # ソースコードのルート
    ├── 📁 assets/          # 画像、音声、フォントなどのアセット
    │   ├── 📁 images/       # 背景、ユニット、UIパーツの画像
    │   ├── 📁 audio/        # BGM、効果音(SE)
    │   └── 📁 fonts/        # ゲーム内で使用するフォント
    │
    ├── 📁 components/      # 再利用可能なUIコンポーネント
    │   ├── 📁 ui/           # 汎用的なUIパーツ (Button.tsx, Modal.tsx...)
    │   └── 📁 game/         # ゲーム固有のコンポーネント (GameBoard.tsx, Hexagon.tsx, InfoPanel.tsx...)
    │
    ├── 📁 config/          # 設定・定数
    │   └── constants.ts    # ゲーム内の固定値 (ユニットの能力、地形コストなど)
    │
    ├── 📁 core/            # ゲームの中核をなすロジック (UIに依存しない純粋な処理)
    │   ├── map.ts          # マップ生成、経路探索、範囲計算などのロジック
    │   ├── combat.ts       # 戦闘計算ロジック (ダメージ計算、経験値付与)
    │   └── ai.ts           # CPUの思考ルーチン
    │
    ├── 📁 hooks/           # 状態管理や複雑なロジックを持つカスタムフック
    │   └── useGameLogic.ts # ゲーム全体の状態管理とメインロジック
    │
    ├── 📁 scenes/          # 各ゲーム画面（シーン）のコンポーネント
    │   ├── TitleScreen.tsx
    │   ├── HomeScreen.tsx
    │   ├── StageSelectScreen.tsx
    │   ├── BattlePrepScreen.tsx
    │   ├── BattleScreen.tsx  # 戦闘マップ画面のメインコンポーネント
    │   ├── ResultScreen.tsx
    │   ├── SettingsScreen.tsx
    │   └── SaveLoadScreen.tsx
    │
    ├── <h4> types/           # TypeScriptの型定義
    │   └── index.ts        # Unit型, GameState型などプロジェクト全体の型定義
    │
    └── main.tsx            # アプリケーションのエントリーポイント
